#=============================================================================
# Makefile: for line picking problem
#
# Copyright 2012 Matthew Roughan <matthew.roughan@adelaide.edu.au>
# Copyright 2012 Eric Paronage <eric.parsonage@adelaide.edu.au>
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
# 
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.
# 
#
#=============================================================================
#
#
# NB: this is called gMakefile to allow R to install without hindrance
#     call this e.g., by make -f gMakefile
#

default: all

#-----------------------------------------------------------------------------

#=============================================================================
# This section works out what operating system Matlab is going to target 
# and the extension it will use for its mex files
#=============================================================================
MATLAB_ARCH=''
MATLAB_EXT=''

# get the OS 
UNAME = $(shell uname -s)

ifeq ("$(UNAME)","Darwin")
# Darwin always reports i386 as architecture if kernel is i386 
# so we check how manybits are in a long
  LBITS := $(shell getconf LONG_BIT)
  ifeq ($(LBITS),64)
    MATLAB_ARCH = "maci64"
    MATLAB_EXT = "mexmaci64"
  else
    MATLAB_ARCH = "maci"
    MATLAB_EXT = "mexmaci"
  endif
endif

ifeq ("$(UNAME)","SunOS")
  MACH_ARCH = $(shell uname -p)
  ifeq ("$(MACH_ARCH)","sparc")
    MATLAB_ARCH =  "sol64"
    MATLAB_EXT = "mexsol"
  endif
  ifeq ("$(MACH_ARCH)","I386")
    MATLAB_ARCH =  "sola64"
    MATLAB_EXT = "mexs64" 
  endif
endif

ifeq ("$(UNAME)","Linux")
  MACH_ARCH = $(shell uname -p)
  ifeq ("$(MACH_ARCH)","i*86")
    MATLAB_ARCH =  "glnx86"
    MATLAB_EXT = "mexglx"
  endif
  ifeq ("$(MACH_ARCH)","x86_64")
    MATLAB_ARCH =  "glnxa64"
    MATLAB_EXT = "mexa64"
  endif
endif

MX=mex -O -largeArrayDims 
CC=gcc -O -fPIC

C = $(shell ls *.c)
HEADERS = $(shell ls *.h)

MEX = LinePicking.$(MATLAB_EXT)
O = LinePicking.o beta.o
SO = LinePicking.so beta.so
STAND_ALONE = LinePicking 

all: ${STAND_ALONE}

test: ${STAND_ALONE}
	./LinePicking -f TestData/test.dat -m 0 > tmp/test.0.out
	./LinePicking -f TestData/test.dat -m 1 > tmp/test.1.out
	./LinePicking -f TestData/test.dat -m 2 > tmp/test.2.out
	./LinePicking -f TestData/test.dat -m 3 > tmp/test.3.out
	./LinePicking -f TestData/test.dat -m 4 > tmp/test.4.out
	./LinePicking -f TestData/test.dat -m 5 > tmp/test.5.out
	diff TestData/test.0.out tmp/test.0.out
	diff TestData/test.1.out tmp/test.1.out
	diff TestData/test.2.out tmp/test.2.out
	diff TestData/test.3.out tmp/test.3.out
	diff TestData/test.4.out tmp/test.4.out
	diff TestData/test.5.out tmp/test.5.out

$(O): %.o: %.c ${HEADERS}
	$(CC) $< -c -o $@ -I/usr/include/ -D_STANDALONE -D_NOTR

$(STAND_ALONE): %: %.o beta.o
	$(CC) $< -o $@ beta.o -lm -lstdc++ -D_STANDALONE -D_NOTR

# use to create MEX library for MATLAB
$(MEX): %.$(MATLAB_EXT): %.c beta.o ${HEADERS}
	$(MX)  $< beta.o -D_MEX -D_NOTR

# shared libraries are used by R, so use R's standard command to define
#    see R CMD SHLIB beta.c, for example
# $(SO): %.so: %.c ${HEADERS}
#	$(CC) -std=gnu99 -shared $< -o $@ -I/usr/include/ -I/usr/share/R/include/ -L/usr/lib64/R/lib -lR
# but actually should allow R-installer to do this

# cause something to always remake when you put this in its dependencies
FORCE:

# standard cleanup etc
.PHONY : clean
clean: 
	- $(RM) *.dll *.oct *.o *.so *~

.PHONY : distclean
distclean: 
	- $(RM) LinePicking *.mex* *.dll *.oct *.o *.so *~





# $(O): %.o: %.c ${HEADERS}
# 	$(CC) $< -c -o $@ -I/usr/include/ -I/usr/local/matlab/extern/include/ 

# $(STAND_ALONE): %: %.o
# 	$(CC) $< -o $@ -L/usr/local/matlab/bin/glnxa64 -lmx -lmex -lmat -lm -lstdc++

